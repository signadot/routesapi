/*
Signadot Routes API

The Signadot Routes API provides access to routing rules pertinent to Signadot Sandboxes on a cluster with the Signadot Operator (>= v0.14.2) installed. 

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package models

import (
	"encoding/json"
)

// checks if the WorkloadRoutesResponse type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WorkloadRoutesResponse{}

// WorkloadRoutesResponse A workloadRoutesResponse gives the set of WorkloadRoutes which match a given GetWorkloadRoutes request
type WorkloadRoutesResponse struct {
	Routes []WorkloadRoute `json:"routes,omitempty"`
}

// NewWorkloadRoutesResponse instantiates a new WorkloadRoutesResponse object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWorkloadRoutesResponse() *WorkloadRoutesResponse {
	this := WorkloadRoutesResponse{}
	return &this
}

// NewWorkloadRoutesResponseWithDefaults instantiates a new WorkloadRoutesResponse object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWorkloadRoutesResponseWithDefaults() *WorkloadRoutesResponse {
	this := WorkloadRoutesResponse{}
	return &this
}

// GetRoutes returns the Routes field value if set, zero value otherwise.
func (o *WorkloadRoutesResponse) GetRoutes() []WorkloadRoute {
	if o == nil || IsNil(o.Routes) {
		var ret []WorkloadRoute
		return ret
	}
	return o.Routes
}

// GetRoutesOk returns a tuple with the Routes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WorkloadRoutesResponse) GetRoutesOk() ([]WorkloadRoute, bool) {
	if o == nil || IsNil(o.Routes) {
		return nil, false
	}
	return o.Routes, true
}

// HasRoutes returns a boolean if a field has been set.
func (o *WorkloadRoutesResponse) HasRoutes() bool {
	if o != nil && !IsNil(o.Routes) {
		return true
	}

	return false
}

// SetRoutes gets a reference to the given []WorkloadRoute and assigns it to the Routes field.
func (o *WorkloadRoutesResponse) SetRoutes(v []WorkloadRoute) {
	o.Routes = v
}

func (o WorkloadRoutesResponse) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WorkloadRoutesResponse) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Routes) {
		toSerialize["routes"] = o.Routes
	}
	return toSerialize, nil
}

type NullableWorkloadRoutesResponse struct {
	value *WorkloadRoutesResponse
	isSet bool
}

func (v NullableWorkloadRoutesResponse) Get() *WorkloadRoutesResponse {
	return v.value
}

func (v *NullableWorkloadRoutesResponse) Set(val *WorkloadRoutesResponse) {
	v.value = val
	v.isSet = true
}

func (v NullableWorkloadRoutesResponse) IsSet() bool {
	return v.isSet
}

func (v *NullableWorkloadRoutesResponse) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWorkloadRoutesResponse(val *WorkloadRoutesResponse) *NullableWorkloadRoutesResponse {
	return &NullableWorkloadRoutesResponse{value: val, isSet: true}
}

func (v NullableWorkloadRoutesResponse) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWorkloadRoutesResponse) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


